services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db  #or ${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_PORT=${SERVER_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - auth-network

  db:
    image: postgres:17-bookworm
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./migrations:/migrations
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} && PGPASSWORD=${POSTGRES_PASSWORD} psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge

volumes:
  postgres_data: